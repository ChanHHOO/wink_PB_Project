{"ast":null,"code":"import _slicedToArray from \"/home/junho/workspace/wink_PB_Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/junho/workspace/wink_PB_Project/src/components/commons/login/example.js\";\nimport React, { useState } from 'react';\nimport { Button, Form, Message, Header } from 'semantic-ui-react';\nimport firebase from '../../../firebase';\n\nconst RegisterPage = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputVal = _useState2[0],\n        setInputVal = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        checkEmail = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        inputPassword = _useState6[0],\n        setInputPassword = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        inputPasswordCheck = _useState8[0],\n        setInputPasswordCheck = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        inputNickName = _useState10[0],\n        setInputNickName = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        checkNickName = _useState12[0],\n        setCheckNickName = _useState12[1];\n\n  const CheckEmail = () => {\n    if (inputVal.includes('@') && inputVal.includes('.')) {\n      setEmail(true);\n    } else {\n      setEmail(false);\n    }\n  };\n\n  const onChange = (value, key) => {\n    switch (key) {\n      case 'Email':\n        CheckEmail();\n        setInputVal(value);\n        return;\n\n      case 'Password':\n        setInputPassword(value);\n        return;\n\n      case 'PasswordCheck':\n        setInputPasswordCheck(value);\n        return;\n\n      case 'NickName':\n        setInputNickName(value);\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  const handleInput = (e, key) => {\n    onChange(e.target.value, key);\n  };\n\n  const inputEmailType = () => {\n    return React.createElement(Message, {\n      success: true,\n      header: \"Email Completed\",\n      content: \"Complete Next step\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  };\n\n  const onSubmit = async () => {\n    if (checkEmail && inputPassword === inputPasswordCheck) {\n      const users = await firebase.auth().createUserWithEmailAndPassword(inputVal, inputPassword).catch(error => {// Handle Errors here.\n        // var errorCode = error.code;\n        // var errorMessage = error.message;\n      });\n      alert('success!');\n      window.location.href = './';\n    } else {\n      alert('retry');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      left: '50em',\n      top: '20em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    size: \"huge\",\n    style: {\n      fontSize: '3rem',\n      marginTop: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Signup\"), React.createElement(\"div\", {\n    style: {\n      maxWidth: '450px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Form, {\n    success: true,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    onChange: e => {\n      handleInput(e, 'Email');\n    },\n    value: inputVal,\n    label: \"Email\",\n    placeholder: \"joe@schmoe.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), checkEmail === true ? inputEmailType() : '', React.createElement(Form.Input, {\n    type: \"password\",\n    onChange: e => {\n      handleInput(e, 'Password');\n    },\n    value: inputPassword,\n    label: \"Password\",\n    placeholder: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    type: \"password\",\n    onChange: e => {\n      handleInput(e, 'PasswordCheck');\n    },\n    value: inputPasswordCheck,\n    label: \"Check password\",\n    placeholder: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    type: \"text\",\n    onChange: e => {\n      handleInput(e, 'NickName');\n    },\n    value: inputNickName,\n    label: \"NickName\",\n    placeholder: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \" Submit \"))));\n};\n\nexport default RegisterPage;","map":{"version":3,"sources":["/home/junho/workspace/wink_PB_Project/src/components/commons/login/example.js"],"names":["React","useState","Button","Form","Message","Header","firebase","RegisterPage","inputVal","setInputVal","checkEmail","setEmail","inputPassword","setInputPassword","inputPasswordCheck","setInputPasswordCheck","inputNickName","setInputNickName","checkNickName","setCheckNickName","CheckEmail","includes","onChange","value","key","handleInput","e","target","inputEmailType","onSubmit","users","auth","createUserWithEmailAndPassword","catch","error","alert","window","location","href","position","left","top","fontSize","marginTop","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Message, Header } from 'semantic-ui-react';\nimport firebase from '../../../firebase';\n\nconst RegisterPage = () => {\n    const [inputVal, setInputVal] = useState('');\n    const [checkEmail, setEmail] = useState(false);\n\n    const [inputPassword, setInputPassword] = useState('');\n    const [inputPasswordCheck, setInputPasswordCheck] = useState('');\n\n    const [inputNickName, setInputNickName] = useState(\"\");\n    const [checkNickName, setCheckNickName] = useState(\"\");\n\n    const CheckEmail = () => {\n        if (inputVal.includes('@') && inputVal.includes('.')) {\n            setEmail(true);\n        } else {\n            setEmail(false);\n        }\n    };\n    const onChange = (value, key) => {\n        switch (key) {\n            case 'Email':\n                CheckEmail();\n                setInputVal(value);\n                return;\n            case 'Password':\n                setInputPassword(value);\n                return;\n            case 'PasswordCheck':\n                setInputPasswordCheck(value);\n                return;\n            case 'NickName':\n                setInputNickName(value);\n                return;\n            default:\n                return;\n        }\n    };\n    const handleInput = (e, key) => {\n        onChange(e.target.value, key);\n    };\n\n    const inputEmailType = () => {\n        return (\n            <Message success header=\"Email Completed\" content=\"Complete Next step\" />\n        );\n    };\n    const onSubmit = async () => {\n        if (checkEmail && inputPassword === inputPasswordCheck) {\n            const users = await firebase\n                .auth()\n                .createUserWithEmailAndPassword(inputVal, inputPassword)\n                .catch(error => {\n                    // Handle Errors here.\n                    // var errorCode = error.code;\n                    // var errorMessage = error.message;\n                });\n            alert('success!');\n            window.location.href = './';\n        } else {\n            alert('retry');\n        }\n    };\n    return (\n        <div style={{ position: 'relative', left: '50em', top: '20em' }}>\n            {/*<Header as=\"h2\" textAlign=\"center\">*/}\n            {/*  <Image src=\"https://react.semantic-ui.com/logo.png\" /> OSP.GG*/}\n            {/*</Header>*/}\n            <Header as=\"h1\" size=\"huge\" style={{ fontSize: '3rem', marginTop: 0 }}>\n                Signup\n            </Header>\n            <div style={{ maxWidth: '450px' }}>\n                <Form success onSubmit={onSubmit}>\n                    <Form.Input\n                        onChange={e => {\n                            handleInput(e, 'Email');\n                        }}\n                        value={inputVal}\n                        label=\"Email\"\n                        placeholder=\"joe@schmoe.com\"\n                    />\n                    {checkEmail === true ? inputEmailType() : ''}\n                    <Form.Input\n                        type=\"password\"\n                        onChange={e => {\n                            handleInput(e, 'Password');\n                        }}\n                        value={inputPassword}\n                        label=\"Password\"\n                        placeholder=\"\"\n                    />\n                    <Form.Input\n                        type=\"password\"\n                        onChange={e => {\n                            handleInput(e, 'PasswordCheck');\n                        }}\n                        value={inputPasswordCheck}\n                        label=\"Check password\"\n                        placeholder=\"\"\n                    />\n                    <Form.Input\n                        type=\"text\"\n                        onChange={e => {\n                            handleInput(e, 'NickName');\n                        }}\n                        value={inputNickName}\n                        label=\"NickName\"\n                        placeholder=\"\"\n                    />\n                    <Button onClick={onSubmit}> Submit </Button>\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterPage;"]},"metadata":{},"sourceType":"module"}